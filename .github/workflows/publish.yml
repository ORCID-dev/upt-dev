name: Publish

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Configures Binary stripping
      run: |
        mkdir -p .cargo
        echo '[build]' >> .cargo/config.toml
        echo 'rustflags = ["-C", "link-args=-s"]' >> .cargo/config.toml

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --target ${{ matrix.target }} --release

    - name: generate git_sha short
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Check sha_short
      run: echo "${{ steps.vars.outputs.sha_short }}"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/upt
        asset_name: upt-${{ matrix.target }}
        tag: ${{ github.ref }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      if: matrix.os == 'windows-latest'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/upt.exe
        asset_name: upt-${{ matrix.target }}.exe
        tag: ${{ github.ref }}

