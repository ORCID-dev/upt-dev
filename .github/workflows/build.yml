name: Build

on:
  workflow_dispatch:

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Configures Binary stripping
      run: |
        mkdir -p .cargo
        echo '[build]' >> .cargo/config.toml
        echo 'rustflags = ["-C", "link-args=-s"]' >> .cargo/config.toml

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --target ${{ matrix.target }} --release

    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "::set-output name=short_sha::$calculatedSha"

    - name: Confirm git commit SHA output
      run: echo ${{ steps.vars.outputs.short_sha }}


    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      with:
        name: upt-${{ matrix.target }}-${{ steps.vars.outputs.short_sha }}
        path: target/${{ matrix.target }}/release/upt

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      if: matrix.os == 'windows-latest'
      with:
        name: upt-${{ matrix.target }}-${{ steps.vars.outputs.short_sha }}.exe
        path: target/${{ matrix.target }}/release/upt

