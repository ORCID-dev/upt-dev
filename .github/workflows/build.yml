name: Build

on:
  workflow_dispatch:

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Configures Binary stripping
      run: |
        mkdir -p .cargo
        echo '[build]' >> .cargo/config.toml
        echo 'rustflags = ["-C", "link-args=-s", "-C", "target-feature=+crt-static"]' >> .cargo/config.toml


#     - name: Build
#       run: cargo build --release --locked
#

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --target ${{ matrix.target }} --release

#     - name: Strip binary
#       if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
#       run: strip target/release/upt


    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: |
          path/output/bin/
          path/output/test-results
          !path/**/*.tmp

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      with:
        name: upt-${{ matrix.target }}-${{ github.ref }}
        path: target/release/upt

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      if: matrix.os == 'windows-latest'
      with:
        name: upt-${{ matrix.target }}-${{ github.ref }}.exe
        path: target/release/upt

